// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paqueteria.Models;

namespace Paqueteria.Migrations
{
    [DbContext(typeof(PaqueteriaContext))]
    [Migration("20181108225258_ComplexModel")]
    partial class ComplexModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Paqueteria.Models.Aplicacion", b =>
                {
                    b.Property<int>("AplicacionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionApp")
                        .HasMaxLength(100);

                    b.Property<string>("DetalleApp")
                        .HasMaxLength(100);

                    b.Property<int>("EstadoID");

                    b.Property<DateTime>("FinalDate");

                    b.Property<string>("NombreApp")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("AplicacionID");

                    b.HasIndex("EstadoID");

                    b.ToTable("Aplicacion");
                });

            modelBuilder.Entity("Paqueteria.Models.AplicacionPaquete", b =>
                {
                    b.Property<int>("AplicacionID");

                    b.Property<int>("PaqueteID");

                    b.HasKey("AplicacionID", "PaqueteID");

                    b.HasIndex("PaqueteID");

                    b.ToTable("AplicacionPaquete");
                });

            modelBuilder.Entity("Paqueteria.Models.Dependencia", b =>
                {
                    b.Property<int>("DependenciaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDpd")
                        .HasMaxLength(100);

                    b.Property<int>("EstadoID");

                    b.Property<DateTime>("FinaltDate");

                    b.Property<string>("NombreDpd")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("DependenciaID");

                    b.HasIndex("EstadoID");

                    b.ToTable("Dependencia");
                });

            modelBuilder.Entity("Paqueteria.Models.Estado", b =>
                {
                    b.Property<int>("EstadoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEdo");

                    b.Property<string>("NombreEdo");

                    b.HasKey("EstadoID");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Paqueteria.Models.Incidencia", b =>
                {
                    b.Property<int>("IncidenciaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionIc")
                        .IsRequired();

                    b.Property<int>("EstadoID");

                    b.Property<DateTime>("FinaltDate");

                    b.Property<string>("NombreIc")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("PaqueteID");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("IncidenciaID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("PaqueteID");

                    b.ToTable("Incidecia");
                });

            modelBuilder.Entity("Paqueteria.Models.Paquete", b =>
                {
                    b.Property<int>("PaqueteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPck")
                        .HasMaxLength(100);

                    b.Property<string>("DetallePck")
                        .HasMaxLength(100);

                    b.Property<int>("EstadoID");

                    b.Property<DateTime>("FinalDate");

                    b.Property<string>("NombrePck")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("PaqueteID");

                    b.HasIndex("EstadoID");

                    b.ToTable("Paquete");
                });

            modelBuilder.Entity("Paqueteria.Models.Relacion", b =>
                {
                    b.Property<int>("PaqueteID");

                    b.Property<int>("DependenciaID");

                    b.HasKey("PaqueteID", "DependenciaID");

                    b.HasIndex("DependenciaID");

                    b.ToTable("Relacion");
                });

            modelBuilder.Entity("Paqueteria.Models.Aplicacion", b =>
                {
                    b.HasOne("Paqueteria.Models.Estado", "Estados")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paqueteria.Models.AplicacionPaquete", b =>
                {
                    b.HasOne("Paqueteria.Models.Aplicacion", "Aplicacion")
                        .WithMany("AplicacionPaquetes")
                        .HasForeignKey("AplicacionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paqueteria.Models.Paquete", "Paquete")
                        .WithMany("AplicacionPaquetes")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paqueteria.Models.Dependencia", b =>
                {
                    b.HasOne("Paqueteria.Models.Estado", "Estados")
                        .WithMany("Dependencias")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paqueteria.Models.Incidencia", b =>
                {
                    b.HasOne("Paqueteria.Models.Estado", "Estados")
                        .WithMany("Incidencias")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paqueteria.Models.Paquete", "Paquete")
                        .WithMany("Incidencias")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paqueteria.Models.Paquete", b =>
                {
                    b.HasOne("Paqueteria.Models.Estado", "Estados")
                        .WithMany("Paquetes")
                        .HasForeignKey("EstadoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Paqueteria.Models.Relacion", b =>
                {
                    b.HasOne("Paqueteria.Models.Dependencia", "Dependencia")
                        .WithMany("Relacions")
                        .HasForeignKey("DependenciaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Paqueteria.Models.Paquete", "Paquete")
                        .WithMany("Relacions")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
